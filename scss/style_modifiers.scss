%u-pseudo {
	&:after {
		content: 		"";
	    display: 		block;
	    top: 			0;
	    left: 			0;
	    width: 			100%;
	}
}

// Position

.p-abs,
.p-fix {
	top:				0;
	left:				0;
}

.p-abs {
	position:			absolute;
	width:				100%;

	img {
		object-fit: 	cover;
		height:			100%;
	}
}

.p-fix {
	position:			fixed;
}

.p-ctr {
	position:			absolute;
	top:				50%;
	left:				50%;
	transform:			translate(-50%, -50%);
}

// Display

.d-inline {
	display:			inline;
}

.d-hidden {
	display:			none;
}

.d-grid {
	display:			grid;
}

// Flex

.flx {
	display:			flex;
}

.f-wrp {
	flex-wrap:			wrap;
}

.no-shrink > *,
.f-sh0 > * {
	flex-shrink:		0;
}

// Direction

.f-col {
	flex-direction:		column;
}

.f-colR {
	flex-direction:		column-reverse;
}

.f-rowR {
	flex-direction:		row-reverse;
}

// Justification 

.f-jst {
	justify-content: 	flex-start;
}

.f-jct {
	justify-content:	center;
}

.f-jnd {
	justify-content:	flex-end;
}

.f-jbt {
	justify-content:	space-between;
}

.f-jar {
	justify-content:	space-around;
}

// Self-justification

.f-jSst {
	justify-self:		start;
}

// Alignment

.f-act {
	align-items:		center;
}

.f-ast {
	align-items:		flex-start;
}

.f-and {
	align-items:		flex-end;
}

// Self-alignment

.f-aSst {
	align-self:			flex-start;
}

.f-aSct {
	align-self:			center;
}

.f-aSnd {
	align-self:			flex-end;
}

// Asepct Ratios

	.asp--16-9 {
		@extend				%u-pseudo;
		
		&:after {
			padding-top:		56.25%;
		}
	}

	.asp--9-16:after {
		padding-top:		177.77%;
		// @extend				%wrp;
	}	

	// 16:10
	.asp--16-10 {
		@extend				%u-pseudo;
		
		&:after {
			padding-top:		62.5%;
		}
	}	

	.asp--10-16:after {
		padding-top:		160%;
		// @extend				%wrp;
	}	

	.asp--235-1 {
		@extend				%u-pseudo;

		&:after {
			padding-top:		42.55%;
		}
		// @extend				%wrp;
	}

	.asp--1-1:after {
		padding-top:		100%;
		@extend				%u-pseudo;
	}

	.asp--4-3:after {
		padding-top:		calc(100% / 4 * 3);
		@extend				%u-pseudo;
	}

	.asp--3-4:after {
		padding-top:		calc(100% / 3 * 4);
		@extend				%u-pseudo;
	}

	.asp--2-3:after {
		padding-top:		calc(100% / 2 * 3);
		@extend				%u-pseudo;
	}

	.asp--3-2:after {
		padding-top:		calc(100% / 3 * 2);
		@extend				%u-pseudo;
	}

	.wrp--circle {
		border-radius:		50%;
		@extend				%u-pseudo;

		&:after {
			padding-top:	100%;
		}
	}

// Type modifiers

	%text-type {
		font-family: 			var(--text-type);
	}

	%display-type {
		font-family: 			var(--display-type);
		font-size:				var(--fontSize);
		--fontSize:				1em;

		.wf-active & {
			font-family: 			var(--display-type);
			letter-spacing:			calc( -0.017231 * var(--fontSize) + 0.092231em );
		}
	}

	%t-ctr,
	.t-ctr {
		text-align:				center;
	}

	.t-lef {
		text-align:				left;
	}

	.t-rig {
		text-align:				right;
	}

	%text-splash {
		text-align: 			center;
	}

// Images

	%img-cover {
		object-fit:			cover;
		background-position:center;
		background-size:	cover;
		width: 				100%;
	}

// Animation

	.animate {
		transform-origin:	0% 0%;
		pointer-events:		none;
		transition:			opacity 	var(--timing, $fast) var(--easing),
							transform 	var(--timing, $fast) var(--easing);
							// filter 		var(--timing, $fast) var(--easing);
	}

	.is-flipped {
		transform-origin: 0% 0%;
	}
	
// Scrim

	.scrim {
		@extend				%u-pseudo;

		// Default pseudo elements
		&:before,
		&:after {
			position:		absolute;
			--gDirection:	to top;
			--gStart:		0%;
			--gEnd:			100%;
			--gHeight:		100%;
			display:		none;
			z-index: 		z(-1);
			height:			var(--gHeight);

			@include easedScrim( 
				var(--gDirection), 
				#10051e,
				var(--gStart), 
				var(--gEnd) 
			);
		}

		// Length modifiers
		&.sL {
			&__100 {
				&:before,
				&:after {
					--gHeight:	100%;
				}
			}

			&__150 {
				&:before,
				&:after {
					--gHeight:	150%;
				}
			}

			&__200 {
				&:before,
				&:after {
					--gHeight:	200%;
				}
			}
		}

		// Direction modifiers
		// The direction describes the *origin* of the scrim,
		// i.e. the opaque point.
		&.sD {
			// From left
			&__l:before {
				display:		block;
				--gDirection:	to right;
				left:			0;
			}

			// From right
			&__r:after {
				display:		block;
				--gDirection:	to left;
				right:			0;
			}

			// From top
			&__t:before {
				display:		block;
				--gDirection:	to bottom;
				top:			0;
				left:			0;
			}

			// From bottom
			&__b:after {
				display:		block;
				--gDirection:	to top;
				bottom:			0;
				left:			0;
			}
		}

		// Start point modifiers
		&.sS {
			&__0 {
				&:before,
				&:after {
					--gStart:	0%;
				}
			}

			&__25 {
				&:before,
				&:after {
					--gStart:	25%;
				}
			}

			&__125 {
				&:before,
				&:after {
					--gStart:	12.5%;
				}
			}

			&__50 {
				&:before,
				&:after {
					--gStart:	50%;
				}
			}

			&__75 {
				&:before,
				&:after {
					--gStart:	75%;
				}
			}
		}

		// End point modifiers
		&.sE {
			&__25 {
				&:before,
				&:after {
					--gEnd:		25%;
				}
			}

			&__325 {
				&:before,
				&:after {
					--gEnd:		32.5%;
				}
			}

			&__50 {
				&:before,
				&:after {
					--gEnd:		50%;
				}
			}

			&__75 {
				&:before,
				&:after {
					--gEnd:		75%;
				}
			}

			&__100 {
				&:before,
				&:after {
					--gEnd:		100%;
				}
			}

			&__150 {
				&:before,
				&:after {
					--gEnd:		150%;
				}
			}
		}
	}

// Size modifiers

	// Width
	.w {
		&--fw {
			width:			100%;
			max-width:		var(--line-length);
		}

		&--fs {
			width:			100vw;
			max-width:		initial;
		}
	}

	// Height
	.h {
		&--fh {
			min-height:		var(--fullHeight, 100%);
		}
	}

// Padding modifiers

	.pad {

		// Top padding
		&-t--0 {
			padding-top:		0 !important;
		}

		&-b--xxs {
			padding-bottom:		u($xxs, em);
		}

		&-b--xs {
			padding-bottom:		u($xs, em);
		}

		&-t--m {
			padding-top:		u($xl, em);
		}
	}

// Margin modifiers

	.mrgn {

		// Bottom margin

		&-b--0 + * {
			margin-top:		0 !important;
		}

		&-b--0:last-child {
			margin-bottom:		0 !important;
		}

		&-b--xs + * {
			margin-top:		var(--margin--xs);
		}

		&-b--xs:last-child {
			margin-bottom:		var(--margin--xs);
		}

		&-b--s + * {
			margin-top:		var(--margin--s);
		}

		&-b--s:last-child {
			margin-bottom:		var(--margin--s);
		}

		&-b--m + * {
			margin-top:		var(--margin--m);
		}

		&-b--m:last-child {
			margin-bottom:		var(--margin--m);
		}

		&-b--l + * {
			margin-top:		var(--margin--l);
		}

		&-b--l:last-child {
			margin-bottom:		var(--margin--l);
		}

		&-b--xl + * {
			margin-top:		u($xl, rem);
		}

		&-b--xl:last-child {
			margin-bottom:		u($xl, rem);
		}

		&-b--xxl + * {
			margin-top:		var(--margin--xl);
		}

		&-b--xxl:last-child {
			margin-bottom:		var(--margin--xl);
		}

		&-r--s + * {
			margin-left: 		var(--margin--s);
		}

		&-r--xs + * {
			margin-left: 		var(--margin--xs);
		}
	}


//  Grid modifiers
	
	.grid {
		// display: 				grid;
		// justify-content: 		center;

		&--col {
			&-2 {
				@include mq(min-width, 768px) {
					grid-template-columns:	[grid-start] repeat(2, 1fr) [grid-end];
				}
			}
		}
	}

	.grid__col {
		justify-content: 			start;

		&--full {
			grid-column:			section--start / section--end;
		}
	}

	.grid--2-col {
		@include mq(min-width, 768px) {
			display:				grid;
			grid-template-columns:	repeat(2, 1fr);
			grid-gap:	 			1.5em;
			grid-template-rows: 	auto;
			align-items: 			start;
		}
	}

	.grid--4-col {
		@include mq(min-width, 768px) {
			display:				grid;
			grid-template-columns:	repeat(4, 1fr);
			grid-gap:	 			1.5em;
			grid-template-rows: 	auto;
			align-items: 			start;
		}
	}

	.grid--col.col-full {
		grid-column-start:			1;
		grid-column-end:			5;
	}

	.grid--col.col-2-1 {
		grid-column-start:			1;
		grid-column-end:			3;
	}

	.grid--col.col-2-2 {
		grid-column-start:			3;
		grid-column-end:			5;
	}

	.tright {
		text-align: right;
	}

.grid {
	grid-gap:		var(--margin--m);
	// align-items: start;
	justify-items: center;
	
	&:not(.optional) {
		display:	grid;
		
	}

	&--3-up {
		grid-column-gap:				0;
		grid-row-gap:				0;
		grid-template-columns:	[grid--start] repeat(2, 1fr) [grid--end];
		grid-template-rows:		
			[grid--start] 
				calc(var(--pageWidth) * 0.3125) 
			[small-a--end small-b--start] 
				calc(var(--pageWidth) * 0.3125) 
			[grid--end];
		grid-template-areas:	'large small-1'
								'large small-2 ';
		// object-fit:		cover;
		max-height:			calc( var(--pageWidth) * 0.625 );

		picture,
		img {
			width:			100%;
			height:			100%;
			object-fit:		cover;

			&:nth-child(1) {
				grid-row:	grid--start / grid--end;
				grid-area:	large;
			}

			&:nth-child(2) {
				grid-row:	grid--start / small-a--end;
				grid-area:	small-1;
			}

			&:nth-child(3) {
				grid-row:	small-b--start / grid--end;
				grid-area:	small-2;
			}
		}
	}

	&--col {
		&-2:not(.optional) {
			grid-template-columns:	[grid--start] repeat(2, 1fr) [grid--end];
		}

		&-3:not(.optional) {
			grid-column-gap:		var(--margin--s);
			grid-template-columns:	[grid--start] repeat(3, 1fr) [grid--end];
		}

		&-3.optional {
			display:	grid;
			grid-template-columns:	[grid--start] 1fr [grid--end];

			@include mq(min-width, 768px) {
				grid-template-columns:	[grid--start] repeat(3, 1fr) [grid--end];		
			}
		}

		&-1-2 {
			grid-template-columns:	[grid--start] 1fr 2fr [grid--end];
		}
	}

	&.optional {
		@include mq(min-width, 768px) {
			display:				grid;
		}
	}

	&--col {
		&-2.optional {
			@include mq(min-width, 768px) {
				grid-template-columns:	[grid--start] repeat(2, 1fr) [grid--end];
			}
		}
	}
}

.grid__col {
	&-full {
		grid-column:		grid--start / grid--end;
	}
}

[class^="asp--"],
[class*=" asp--"] {
	position:				relative;
}